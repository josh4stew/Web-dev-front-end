{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CryptoList = _resolveComponent(\"CryptoList\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_CryptoList, {\n    cryptos: $data.cryptos\n  }, null, 8, [\"cryptos\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_CryptoList","cryptos","$data"],"sources":["C:\\Users\\joshi\\OneDrive\\Desktop\\proj\\project-frontend\\src\\components\\CryptoApp.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <CryptoList :cryptos=\"cryptos\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import CryptoList from './CryptoList.vue';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    components: { CryptoList },\r\n    data() {\r\n      return {\r\n        cryptos: []\r\n      };\r\n    },\r\n    mounted() {\r\n      axios.get('https://storied-mermaid-78500d.netlify.app/api')\r\n        .then(response => {\r\n          this.cryptos = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching data:', error);\r\n        });\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";;;uBACIA,mBAAA,CAEM,cADJC,YAAA,CAAiCC,qBAAA;IAApBC,OAAO,EAAEC,KAAA,CAAAD;EAAO,yB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}